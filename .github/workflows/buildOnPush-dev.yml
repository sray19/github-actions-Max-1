# This workflow will build a MuleSoft project and deploy to CloudHub 

name: Build and Deploy to DEV

on:
#Trigger the workflow on push or pull request events on main branch
  push:
    branches: 
      - 'dev'
      - 'Training'
      - '!main'
      - '!*m e r g e'
  pull_request:
    branches: 
      - 'dev'
      - 'Training'
      - '!main'
      - '!*m e r g e'
    
  #Allows you to run this workflow manually from the actions tab
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    environment: 
      name: ${github.ref_name}
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Add repo credentials
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [{
           "id": "mule-enterprise",
           "username": "${{ secrets.mule_nexus_username }}",
           "password": "${{ secrets.mule_nexus_password }}"
          }]
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar

 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    #if: github.event_name != 'pull_request'

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts

    - name: Debug
      id: debug
      shell: bash
      run: |
        echo " "
        echo "***********************************************"
        echo "Debug"
        echo "***********************************************"
        echo " "
        #echo ${{secrets.ANYPOINT_PLATFORM_PASSWORD}} | sed 's/./& /g'
        #echo ${{secrets.ANYPOINT_PLATFORM_USERNAME}} | sed 's/./& /g'
        echo ${{ github.ref_name }} | sed 's/./& /g'
        echo "pullReq"
        echo ${{ github.event.issue.pull_request }} | sed 's/./& /g'
        echo: 'xxx'
        echo ${{ github.ref }} | sed 's/./& /g'
        
        ls -l
    
    - name: Deploy to Development
      if: ${{ github.ref_name }} == 'dev'
      env:
        USERNAME: ${{ secrets.anypoint_cicd_username }}
        PASSWORD: ${{ secrets.anypoint_cicd_password }}
        DECRYPTION_KEY: ${{ secrets.decryption_key }}
        #ENV: ${{ secrets.ENVIRONMENT }}
        ENV: ${{ github.ref_name }} #Branch Name
        #GITHUB_BRANCH: ${{ github.ref_name }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -Denv="$ENV" \
         -DskipTests


    - name: Deploy to Training
      if: ${{ github.ref_name }} == 'Training'
      env:
        USERNAME: ${{ secrets.anypoint_cicd_username }}
        PASSWORD: ${{ secrets.anypoint_cicd_password }}
        DECRYPTION_KEY: ${{ secrets.decryption_key }}
        #ENV: ${{ secrets.ENVIRONMENT }}
        ENV: ${{ github.ref_name }} #Branch Name
        #GITHUB_BRANCH: ${{ github.ref_name }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -Denv="$ENV" \
         -DskipTests     



